{
  "name": "js-string-escape",
  "version": "1.0.0",
  "description": "Escape strings for use as JavaScript string literals",
  "main": "index.js",
  "scripts": {
    "test": "tap test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/joliss/js-string-escape"
  },
  "keywords": [
    "string",
    "escape",
    "backslash",
    "javascript",
    "ecmascript"
  ],
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "contributors": [
    {
      "name": "Mathias Bynens",
      "url": "http://mathiasbynens.be/"
    }
  ],
  "license": "MIT",
  "devDependencies": {
    "tap": "~> 0.4.2",
    "punycode": "~> 1.2.1"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "readme": "# js-string-escape\n\n[![Build Status](https://travis-ci.org/joliss/js-string-escape.png?branch=master)](https://travis-ci.org/joliss/js-string-escape)\n\nEscape any string to be a valid JavaScript string literal between double\nquotes or single quotes.\n\n## Installation\n\n```\nnpm install js-string-escape\n```\n\n## Example\n\nIf you need to generate JavaScript output, this library will help you safely\nput arbitrary data in JavaScript strings:\n\n```js\njsStringEscape = require('js-string-escape')\n\nconsole.log('\"' + jsStringEscape('Quotes (\\\", \\'), newlines (\\n), etc.') + '\"')\n// => \"Quotes (\\\", \\'), newlines (\\n), etc.\"\n```\n\nIn other words, given any string `s`, the following invariants hold:\n\n```js\neval('\"' + jsStringEscape(s) + '\"') === s\neval(\"'\" + jsStringEscape(s) + \"'\") === s\n```\n\nThese `eval` expressions are safe with untrusted strings `s`.\n\nNon-strings will be cast to strings.\n\n## Compliance\n\nThis library has been checked against [ECMAScript\n5.1](http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4) and tested\nagainst all Unicode code points.\n\nNote that the returned string is not necessarily valid JSON, since JSON\ndisallows control characters, and `\\'` is illegal in JSON.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joliss/js-string-escape/issues"
  },
  "_id": "js-string-escape@1.0.0",
  "dist": {
    "shasum": "d2d2365fd2e6b3948b8374ac7628ac0e84d00002",
    "tarball": "http://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.0.tgz"
  },
  "_from": "js-string-escape@^1.0.0",
  "_npmVersion": "1.2.25",
  "_npmUser": {
    "name": "joliss",
    "email": "joliss42@gmail.com"
  },
  "maintainers": [
    {
      "name": "joliss",
      "email": "joliss42@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "d2d2365fd2e6b3948b8374ac7628ac0e84d00002",
  "_resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.0.tgz"
}
